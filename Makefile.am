## This file will be processed by automake (which is called by autogen.sh) to
## generate Makefile.in, which in turn will be processed by configure to
## generate Makefile.

## comments starting with a single # are copied to Makefile.in (and afterwards
## to Makefile), comments with ## are dropped.

SUBDIRS = src data

## only entered for "make dist", "make distclean" and "make maintainer-clean":
##DIST_SUBDIRS = $(SUBDIRS) another_dir

# user manual from SVN (not distributed)
SSR_MANUAL_ORIG = doc/manual/SoundScapeRenderer.pdf
# distributed version of the user manual
SSR_MANUAL_DIST = doc/SoundScapeRenderer-@PACKAGE_VERSION@-manual.pdf

dist_doc_DATA = AUTHORS COPYING $(SSR_MANUAL_DIST) NEWS

# files which should be distributed but not installed
dist_noinst_DATA = INSTALL README

if ENABLE_APP_BUNDLE
extrasdir = ${bundledir}/Extras
endif

# these files are deleted on "make maintainer-clean":
MAINTAINERCLEANFILES = aclocal.m4 stamp-h.in \
                       config.log config.cache config.status

## TODO: find a way to actually use this location (see autogen.sh)
## # where we keep local rules for automake
## ACLOCAL_M4 = autotools/aclocal.m4

# checks for m4 macros in the directory "autotools/m4/"
## see AC_CONFIG_MACRO_DIR in configure.ac
ACLOCAL_AMFLAGS = -I autotools/m4

# just a quick reminder:
#
# $@ stands for the target,
# $* the part wich is identical on the target and on the prerequisite,
# $< the prerequisite which caused the rule to apply,
# $^ all prerequisites (duplicates removed),
# $+ all prerequisites (including duplicates),
# $? gives the names of the prerequisites which are newer than the target
# $(@D) only the directory part, $(@F) only the file part

# copy and rename (include version) the user manual on "make dist".
# $(SSR_MANUAL_DIST) has to be in dist_doc_DATA!
$(SSR_MANUAL_DIST): $(SSR_MANUAL_ORIG)
	@test -f "$<" && cp "$<" "$@" || true

# show warning message (if missing), the file must be created by the maintainer:
$(SSR_MANUAL_ORIG):
	@test -f "$@" || echo "Warning: $@ is not generated by the Makefile!"

doc:
	$(MAKE) -C src $@

.PHONY: doc

if ENABLE_APP_BUNDLE
dmg: install
	$(MAKE) -C data/MacOSX $@
else
dmg:
	@echo "You have to run './configure --enable-app-bundle' first!"; false
endif
.PHONY: dmg

# remove pkgdatadir and docdir (if empty)
uninstall-hook:
	-rmdir $(DESTDIR)$(pkgdatadir)
	-rmdir $(DESTDIR)$(docdir)

## Settings for Vim (http://www.vim.org/), please do not remove:
## vim:textwidth=80:comments+=bO\:##
